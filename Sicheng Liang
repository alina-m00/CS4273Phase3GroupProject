/*
============================================================================
Name        : Autorider_Roberts_Kovalonoks_usernameSetup.c
Author      : Roberts Kovalonoks
Version     : 1.0
Copyright   : Your copyright notice
Description : Use his set up user name function, 
add user can change or update the user name function
============================================================================
*/



#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h> 

struct User {
   char firstName[50];
   char lastName[50];
   char username[50];
};

void setupUsername(struct User *user) {
   snprintf(user->username, sizeof(user->username), "%s%s", user->firstName, user->lastName);
   for (int i = 0; user->username[i]; i++) {
       user->username[i] = tolower(user->username[i]);
   }

   printf("Username set up successfully: %s\n", user->username);
}
void changeUsername(struct User *user) {
   char newUsername[50];
   printf("Enter new username: ");
   fflush(stdout);
   scanf("%s", newUsername);
   strncpy(user->username, newUsername, sizeof(user->username));

   for (int i = 0; user->username[i]; i++) {
       user->username[i] = tolower(user->username[i]);
   }
   printf("Username changed successfully: %s\n", user->username);
}

int main() {
   struct User newUser;
   char option;

   printf("Enter first name: ");
   fflush(stdout);
   scanf("%s", newUser.firstName);
   printf("Enter last name: ");
   fflush(stdout);
   scanf("%s", newUser.lastName);

   // 首次设置用户名
   setupUsername(&newUser);

   // 询问用户是否需要更改用户名
   printf("Would you like to change the username? (Y/N): ");
   fflush(stdout);
   scanf(" %c", &option); // 注意前面的空格，它可以帮助忽略前面的换行符
   
   if (option == 'Y' || option == 'y') {
       changeUsername(&newUser);
   }

   return 0;
}
